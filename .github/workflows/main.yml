name: Deploy to VM

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DATABASE_PROXY_URL: ${{ secrets.DATABASE_PROXY_URL }}
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
  DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
  DISCORD_API_ENDPOINT: ${{ secrets.DISCORD_API_ENDPOINT }}
  WEBSITE_BASE_URL: ${{ secrets.WEBSITE_BASE_URL }}
  API_BASE_URL: ${{ secrets.API_BASE_URL }}

  VITE_DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
  VITE_API_BASE_URL: ${{ secrets.API_BASE_URL }}
  VITE_WEBSITE_BASE_URL: ${{ secrets.WEBSITE_BASE_URL }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build using docker-compose
        run: docker-compose build app

      - name: Push Docker image
        run: |
          docker tag app ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: SSH and deploy latest image on VM
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo ${{ secrets.GHCR_PAT }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            docker stop app || true
            docker rm app || true
            docker run -d \
              --name app \
              -p 8080:8080 \
              -e DATABASE_URL=${{ env.DATABASE_URL }} \
              -e DATABASE_PROXY_URL=${{ env.DATABASE_PROXY_URL }} \
              -e BOT_TOKEN=${{ env.BOT_TOKEN }} \
              -e DISCORD_CLIENT_ID=${{ env.DISCORD_CLIENT_ID }} \
              -e DISCORD_CLIENT_SECRET=${{ env.DISCORD_CLIENT_SECRET }} \
              -e DISCORD_API_ENDPOINT=${{ env.DISCORD_API_ENDPOINT }} \
              -e WEBSITE_BASE_URL=${{ env.WEBSITE_BASE_URL }} \
              -e API_BASE_URL=${{ env.API_BASE_URL }} \
              -e VITE_DISCORD_CLIENT_ID=${{ env.VITE_DISCORD_CLIENT_ID }} \
              -e VITE_API_BASE_URL=${{ env.VITE_API_BASE_URL }} \
              -e VITE_WEBSITE_BASE_URL=${{ env.VITE_WEBSITE_BASE_URL }} \
              --restart unless-stopped \
              -v $HOME/prisma-data:/app/prisma \
              -v $HOME/cache:/app/cache \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
