generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider  = "postgresql"
  provider  = "sqlite"
  url       = env("DATABASE_PROXY_URL")
  directUrl = env("DATABASE_URL")
}

model User {
  id                  String      @id @default(uuid())
  xp                  Int         @default(0)
  lastXpTime          DateTime    @default(now())
  lastReputationGiven DateTime    @default(now())
  isEditing           Boolean     @default(false)
  reputation          Int         @default(0)
  about               String?     @default("")
  characters          Character[]
}

model Character {
  id          Int                   @id @default(autoincrement())
  name        String?
  surname     String?
  personality String?
  appearance  String?
  imageUrl    String?
  backstory   String?
  age         String?
  height      String?
  gender      String?
  weight      String?
  isPending   Boolean               @default(true)
  isBeingUsed Boolean               @default(false)
  user        User                  @relation(fields: [userId], references: [id], onDelete: Cascade)
  race        Race?                 @relation(fields: [raceId], references: [id], onDelete: SetNull)
  faction     Faction?              @relation(fields: [factionId], references: [id])
  userId      String
  raceId      Int?
  messages    Message[]
  instruments InstrumentCharacter[]
  factionId   Int?
}

model Message {
  id          String    @unique
  channelId   String
  content     String
  character   Character @relation(fields: [characterId], references: [id])
  characterId Int
}

model Race {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  imageUrl    String
  characters  Character[]
}

model Faction {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  imageUrl    String
  emoji       String
  characters  Character[]
}

model InstrumentCharacter {
  id           Int         @id @default(autoincrement())
  quantity     Int         @default(0)
  character    Character?  @relation(fields: [characterId], references: [id], onDelete: Cascade)
  instrument   Instrument? @relation(fields: [instrumentId], references: [id], onDelete: Cascade)
  characterId  Int?
  instrumentId Int?
}

model Instrument {
  id          Int                   @id @default(autoincrement())
  name        String
  description String
  isBeginner  Boolean               @default(false)
  messageId   String?
  imageUrl    String
  characters  InstrumentCharacter[]
}
